{"version":3,"file":"static/js/950.b671f814.chunk.js","mappings":"gQAGaA,EAAQC,EAAAA,GAAAA,GAAH,yIAGPC,EAAAA,IAIEC,EAAOF,EAAAA,GAAAA,KAAH,iDACKG,EAAAA,IAETC,EAAOJ,EAAAA,GAAAA,GAAH,ofAsBJK,EAASL,EAAAA,GAAAA,IAAH,uHAONM,EAAMN,EAAAA,GAAAA,GAAH,4EACLC,EAAAA,I,SCdX,EAxBa,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,MAAK,SAAAJ,GACnBC,EAAUD,EAAOK,QAClB,GACF,GAAE,KAED,UAACX,EAAD,YACE,SAACH,EAAD,8BACA,SAACO,EAAD,UACGE,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,SAACb,EAAD,WACE,UAAC,KAAD,CAAMc,GAAE,iBAAYF,GAApB,WACE,SAACX,EAAD,CAAQc,IAAG,0CAAqCF,KAC/CF,MAHMC,EADD,QAWnB,C,yMCxBYI,EAAYpB,EAAAA,GAAAA,KAAH,qEAITK,EAASL,EAAAA,GAAAA,IAAH,uHAONI,EAAOJ,EAAAA,GAAAA,GAAH,ofAsBJM,EAAMN,EAAAA,GAAAA,GAAH,4EACLC,EAAAA,IAIEoB,GAAOrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,uI,8LCzCXuB,EAAM,+BACNC,EAAU,mCAEHC,EAAW,mCAAG,WAAOC,EAAOC,GAAd,8EACnBC,EADmB,UACJL,EADI,iCACwBC,EADxB,kBACyCE,EADzC,iBACuDC,GADvD,SAEZE,EAAAA,GAAAA,IAAA,UAAaD,IAAahB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,wDAIXpB,EAAa,mCAAG,2FACrBqB,EADqB,UACJT,EADI,uCAC8BC,EAD9B,SAC8C,GAD9C,SAEdK,EAAAA,GAAAA,IAAA,UAAaG,IAAepB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,qDAIbE,EAAiB,mCAAG,WAAMC,GAAN,8EACzBC,EADyB,UACJZ,EADI,kBACSW,EADT,oBAC4BV,GAD5B,SAElBK,EAAAA,GAAAA,IAAA,UAAaM,IAAmBvB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,sDAIjBK,EAAc,mCAAG,WAAMF,GAAN,8EACtBG,EADsB,UACJd,EADI,kBACSW,EADT,4BACoCV,GADpC,SAEfK,EAAAA,GAAAA,IAAA,UAAaQ,IAAgBzB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,sDAIdO,EAAkB,mCAAG,WAAMJ,GAAN,8EAC1BK,EAD0B,UACLhB,EADK,kBACQW,EADR,4BACmCV,GADnC,SAEnBK,EAAAA,GAAAA,IAAA,UAAaU,IAAmB3B,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IAF1B,mFAAH,qD","sources":["Page/Home/Home.style.js","Page/Home/Home.jsx","Page/Movies/Movie.style.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { TextColor, MainBgColor } from 'styles/vars';\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: space-around;\n  color: ${TextColor};\n  font-size: 35px;\n  padding: 20px 0 20px 0;\n`;\nexport const Main = styled.main`\n  background-color: ${MainBgColor};\n`;\nexport const Item = styled.li`\n  flex-direction: column;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: space-around;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 500;\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    width: calc((100% - 4 * 10px) / 2);\n    margin: 10px;\n  }\n  @media (min-width: 1440px) {\n    width: calc((100% - 6 * 10px) / 3);\n  }\n`;\nexport const Poster = styled.img`\n  width: 450px;\n  margin-bottom: 5px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\nexport const Box = styled.ul`\n  color: ${TextColor};\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { fetchTrending } from 'services/api';\nimport { Link } from 'Page/Movies/Movie.style';\nimport { useEffect, useState } from 'react';\nimport { Box, Item, Main, Poster, Title } from './Home.style';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrending().then(movies => {\n      setMovies(movies.results);\n    });\n  }, []);\n  return (\n    <Main>\n      <Title>Trending today</Title>\n      <Box>\n        {movies.map(({ title, id, poster_path }) => (\n          <Item key={id}>\n            <Link to={`movies/${id}`}>\n              <Poster src={`https://image.tmdb.org/t/p/w500/${poster_path}`} />\n              {title}\n            </Link>\n          </Item>\n        ))}\n      </Box>\n    </Main>\n  );\n};\nexport default Home;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { TextColor } from 'styles/vars';\n\nexport const InputForm = styled.form`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const Poster = styled.img`\n  width: 350px;\n  margin-bottom: 5px;\n  @media (min-width: 768px) {\n    width: 250px;\n  }\n`;\nexport const Item = styled.li`\n  flex-direction: column;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: space-around;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 500;\n  @media (max-width: 767px) {\n    margin-bottom: 50px;\n  }\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    width: calc((100% - 4 * 10px) / 2);\n    margin: 10px;\n  }\n  @media (min-width: 1440px) {\n    width: calc((100% - 6 * 10px) / 3);\n  }\n`;\nexport const Box = styled.ul`\n  color: ${TextColor};\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '56d57795c18f8ce36a604725e208eb01';\n\nexport const fetchMovies = async (query, page) => {\n  const moviesURL = `${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n  return await axios.get(`${moviesURL}`).then(response => response.data);\n};\nexport const fetchTrending = async () => {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${API_KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n};\nexport const fetchMovieDetails = async movieId => {\n  const movieDetailsURL = `${URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return await axios.get(`${movieDetailsURL}`).then(response => response.data);\n};\nexport const fetchMovieCast = async movieId => {\n  const movieCastURL = `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios.get(`${movieCastURL}`).then(response => response.data);\n};\nexport const fetchMoviesReviews = async movieId => {\n  const movieReviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return await axios.get(`${movieReviewsURL}`).then(response => response.data);\n};\n"],"names":["Title","styled","TextColor","Main","MainBgColor","Item","Poster","Box","useState","movies","setMovies","useEffect","fetchTrending","then","results","map","title","id","poster_path","to","src","InputForm","Link","NavLink","URL","API_KEY","fetchMovies","query","page","moviesURL","axios","response","data","trendingURL","fetchMovieDetails","movieId","movieDetailsURL","fetchMovieCast","movieCastURL","fetchMoviesReviews","movieReviewsURL"],"sourceRoot":""}