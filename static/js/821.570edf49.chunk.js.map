{"version":3,"file":"static/js/821.570edf49.chunk.js","mappings":"8SACMA,EAAM,+BACNC,EAAU,mCAEHC,EAAW,mCAAG,WAAOC,EAAOC,GAAd,8EACnBC,EADmB,UACJL,EADI,iCACwBC,EADxB,kBACyCE,EADzC,iBACuDC,GADvD,SAEZE,EAAAA,GAAAA,IAAA,UAAaD,IAAaE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,wDAIXC,EAAa,mCAAG,2FACrBC,EADqB,UACJX,EADI,uCAC8BC,EAD9B,SAC8C,GAD9C,SAEdK,EAAAA,GAAAA,IAAA,UAAaK,IAAeJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,qDAIbG,EAAiB,mCAAG,WAAMC,GAAN,8EACzBC,EADyB,UACJd,EADI,kBACSa,EADT,oBAC4BZ,GAD5B,SAElBK,EAAAA,GAAAA,IAAA,UAAaQ,IAAmBP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,sDAIjBM,EAAc,mCAAG,WAAMF,GAAN,8EACtBG,EADsB,UACJhB,EADI,kBACSa,EADT,4BACoCZ,GADpC,SAEfK,EAAAA,GAAAA,IAAA,UAAaU,IAAgBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,sDAIdQ,EAAkB,mCAAG,WAAMJ,GAAN,8EAC1BK,EAD0B,UACLlB,EADK,kBACQa,EADR,4BACmCZ,GADnC,SAEnBK,EAAAA,GAAAA,IAAA,UAAaY,IAAmBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IAF1B,mFAAH,qD,uFCyB/B,UAxCa,WACX,IAAQI,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAwBO,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAeF,GAASN,MAAK,SAAAiB,GAC3B,IAAMC,EAAe,GACrBD,EAAEH,KAAKK,KAAI,YAA0C,IAC7CC,EAAQ,CACZC,GAFgD,EAAtCA,GAGVC,KAHgD,EAAlCC,cAIdC,MAJgD,EAAnBC,cAM/B,OAAOP,EAAaQ,KAAKN,EAC1B,IACDL,EAAQG,EACT,GACF,GAAE,CAACZ,IAEGQ,GAAQA,EAAKa,OAAS,GAC3B,+BACE,wBACGb,EAAKK,KAAI,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAME,EAAb,EAAaA,MAAb,OACR,wBACGA,GACC,gBACEI,IAAG,0CAAqCJ,GACxCK,IAAKP,KAGP,gBAAKM,IAAKE,EAASD,IAAKP,EAAMS,MAAO,IAAKC,OAAQ,OAP7CX,EADD,SAed,6DAEH,C","sources":["api.js","components/Movies/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '56d57795c18f8ce36a604725e208eb01';\n\nexport const fetchMovies = async (query, page) => {\n  const moviesURL = `${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n  return await axios.get(`${moviesURL}`).then(response => response.data);\n};\nexport const fetchTrending = async () => {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${API_KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n};\nexport const fetchMovieDetails = async movieId => {\n  const movieDetailsURL = `${URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return await axios.get(`${movieDetailsURL}`).then(response => response.data);\n};\nexport const fetchMovieCast = async movieId => {\n  const movieCastURL = `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios.get(`${movieCastURL}`).then(response => response.data);\n};\nexport const fetchMoviesReviews = async movieId => {\n  const movieReviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return await axios.get(`${movieReviewsURL}`).then(response => response.data);\n};\n","import { fetchMovieCast } from 'api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noActor from '../../images/icon-actor.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(r => {\n      const mappedActors = [];\n      r.cast.map(({ id, original_name, profile_path }) => {\n        const actor = {\n          id: id,\n          name: original_name,\n          photo: profile_path,\n        };\n        return mappedActors.push(actor);\n      });\n      setCast(mappedActors);\n    });\n  }, [movieId]);\n\n  return cast && cast.length > 0 ? (\n    <>\n      <ul>\n        {cast.map(({ id, name, photo }) => (\n          <li key={id}>\n            {photo ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${photo}`}\n                alt={name}\n              />\n            ) : (\n              <img src={noActor} alt={name} width={300} height={450} />\n            )}\n          </li>\n        ))}\n      </ul>\n    </>\n  ) : (\n    <p>Sorry, we have no information here</p>\n  );\n};\nexport default Cast;\n"],"names":["URL","API_KEY","fetchMovies","query","page","moviesURL","axios","then","response","data","fetchTrending","trendingURL","fetchMovieDetails","movieId","movieDetailsURL","fetchMovieCast","movieCastURL","fetchMoviesReviews","movieReviewsURL","useParams","useState","cast","setCast","useEffect","r","mappedActors","map","actor","id","name","original_name","photo","profile_path","push","length","src","alt","noActor","width","height"],"sourceRoot":""}