{"version":3,"file":"static/js/186.c993766e.chunk.js","mappings":"8LAqCA,UAjCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAASI,MAAK,SAAAC,GAC/B,IAAMC,EAAgB,GACtBD,EAAEE,QAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QACjBC,EAAe,CACnBC,GAFuC,EAATA,GAG9BH,OAAQA,EACRI,OAAQH,GAEV,OAAOJ,EAAcQ,KAAKH,EAC3B,IACDZ,EAAWO,EACZ,GACF,GAAE,CAACN,IAEGF,GAAWA,EAAQiB,OAAS,GACjC,wBACGjB,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQI,EAAX,EAAWA,OAAQD,EAAnB,EAAmBA,GAAnB,OACX,yBACE,yBACGH,EADH,MACY,gCAAQI,EAAR,WAFLD,EADE,OASf,uDAEH,C,8LCnCKI,EAAM,+BACNC,EAAU,mCAEHC,EAAW,mCAAG,WAAOC,EAAOC,GAAd,8EACnBC,EADmB,UACJL,EADI,iCACwBC,EADxB,kBACyCE,EADzC,iBACuDC,GADvD,SAEZE,EAAAA,GAAAA,IAAA,UAAaD,IAAajB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,wDAIXC,EAAa,mCAAG,2FACrBC,EADqB,UACJV,EADI,uCAC8BC,EAD9B,SAC8C,GAD9C,SAEdK,EAAAA,GAAAA,IAAA,UAAaI,IAAetB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,qDAIbG,EAAiB,mCAAG,WAAM3B,GAAN,8EACzB4B,EADyB,UACJZ,EADI,kBACShB,EADT,oBAC4BiB,GAD5B,SAElBK,EAAAA,GAAAA,IAAA,UAAaM,IAAmBxB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,sDAIjBK,EAAc,mCAAG,WAAM7B,GAAN,8EACtB8B,EADsB,UACJd,EADI,kBACShB,EADT,4BACoCiB,GADpC,SAEfK,EAAAA,GAAAA,IAAA,UAAaQ,IAAgB1B,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAb,IAF3B,mFAAH,sDAIdrB,EAAkB,mCAAG,WAAMH,GAAN,8EAC1B+B,EAD0B,UACLf,EADK,kBACQhB,EADR,4BACmCiB,GADnC,SAEnBK,EAAAA,GAAAA,IAAA,UAAaS,IAAmB3B,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,IAAb,IAF1B,mFAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { fetchMoviesReviews } from 'services/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(r => {\n      const mappedReviews = [];\n      r.results.map(({ author, content, id }) => {\n        const authorReview = {\n          id: id,\n          author: author,\n          review: content,\n        };\n        return mappedReviews.push(authorReview);\n      });\n      setReviews(mappedReviews);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <ul>\n      {reviews.map(({ author, review, id }) => (\n        <li key={id}>\n          <p>\n            {author}: <span>\"{review}\"</span>\n          </p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>We have no reviews here yet.</p>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '56d57795c18f8ce36a604725e208eb01';\n\nexport const fetchMovies = async (query, page) => {\n  const moviesURL = `${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n  return await axios.get(`${moviesURL}`).then(response => response.data);\n};\nexport const fetchTrending = async () => {\n  const trendingURL = `${URL}/trending/movie/day?api_key=${API_KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(response => response.data);\n};\nexport const fetchMovieDetails = async movieId => {\n  const movieDetailsURL = `${URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return await axios.get(`${movieDetailsURL}`).then(response => response.data);\n};\nexport const fetchMovieCast = async movieId => {\n  const movieCastURL = `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios.get(`${movieCastURL}`).then(response => response.data);\n};\nexport const fetchMoviesReviews = async movieId => {\n  const movieReviewsURL = `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return await axios.get(`${movieReviewsURL}`).then(response => response.data);\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMoviesReviews","then","r","mappedReviews","results","map","author","content","authorReview","id","review","push","length","URL","API_KEY","fetchMovies","query","page","moviesURL","axios","response","data","fetchTrending","trendingURL","fetchMovieDetails","movieDetailsURL","fetchMovieCast","movieCastURL","movieReviewsURL"],"sourceRoot":""}